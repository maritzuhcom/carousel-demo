{"version":3,"sources":["Carousel/ImageMedia.tsx","Carousel/Cta.tsx","Carousel/useInterval.tsx","Carousel/DesktopCarousel.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ImageMedia","media","desktop","mobile","urlLarge","urlSmall","Image","styled","main","props","Cta","textData","position","title","heading","subHead","CtaWrapper","Title","Heading","positionStyle","buttons","map","index","label","url","Button","href","target","ButtonWrapper","renderButtons","div","span","section","a","useInterval","callback","delay","savedCallbackRef","useRef","useEffect","current","intervalId","setInterval","clearInterval","DesktopCarousel","imageData","forEach","src","useState","length","carouselIndexes","setCarouselIndexes","offset","setOffset","transition","setTransition","direction","setDirection","setIsScrolling","handleCarouselMove","left","middle","right","setTimeout","clearScrollInterval","setScrollInterval","Fragment","CarouselImageWrapper","toString","cta","ctaPosition","subhead","ContentSection","Chevron","onMouseEnter","onMouseLeave","onClick","rotation","Main","App","URLSearchParams","window","location","search","get","useCars","setError","serviceResponse","setServiceResponse","resUrl","axios","res","statusText","data","makeRequest","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01b3095a.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { Media } from \"../types\";\n\ninterface Props {\n  media: Media;\n}\n\nconst ImageMedia: React.FC<Props> = ({ media: { desktop, mobile } }: Props) => {\n  return <Image urlLarge={desktop} urlSmall={mobile} />;\n};\n\nexport default ImageMedia;\n\nconst Image = styled.main<{ urlLarge: string; urlSmall: string }>`\n  background-position: center;\n  background-image: url(${(props) => props.urlLarge});\n  background-repeat: no-repeat;\n  background-size: cover;\n  height: 100%;\n  width: 100%;\n\n  @media (max-width: 767px) {\n    background-image: url(${(props) => props.urlSmall});\n  }\n\n  @media only screen and (min-device-width: 768px) and (max-device-width: 1024px) {\n    background-image: url(${(props) => props.urlSmall});\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { CTA } from \"../types\";\n\ninterface Props {\n  textData: CTA[];\n  position: String;\n  heading: String;\n  subHead: String;\n  title: String;\n}\n\nconst Cta: React.FC<Props> = ({\n  textData,\n  position,\n  title,\n  heading,\n  subHead,\n}: Props) => {\n  const renderButtons = () => {\n    let positionStyle = \"space-between\";\n\n    switch (position) {\n      case \"left\": {\n        positionStyle = \"flex-start\";\n        break;\n      }\n      case \"right\": {\n        positionStyle = \"flex-end\";\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n\n    // the mens and womens buttons have mixed URLs from the BE\n    const buttons = textData.map(({ label, url }: CTA, index: number) => (\n      <Button key={index} href={url} target=\"_blank\">\n        {label}\n      </Button>\n    ));\n\n    return (\n      <ButtonWrapper positionStyle={positionStyle}>{buttons}</ButtonWrapper>\n    );\n  };\n\n  return (\n    <CtaWrapper>\n      <Title>{title}</Title>\n      <Heading>{heading}</Heading>\n      <p>{subHead}</p>\n      {renderButtons()}\n    </CtaWrapper>\n  );\n};\n\nexport default Cta;\n\nconst CtaWrapper = styled.div`\n  width: 500px;\n  height: 300px;\n  position: absolute;\n  color: black;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Title = styled.span`\n  font-size: 35px;\n  font-weight: bold;\n  color: white;\n  margin-bottom: 20px;\n  letter-spacing: 2.5px;\n  text-transform: uppercase;\n`;\n\nconst Heading = styled.span`\n  color: white;\n  font-size: 14px;\n  text-align: center;\n\n  @media (max-width: 767px) {\n    width: 200px;\n  }\n`;\n\nconst ButtonWrapper = styled.section<{ positionStyle: string }>`\n  width: inherit;\n  display: flex;\n  align-items: center;\n  justify-content: ${(props) => props.positionStyle};\n\n   @media (max-width: 767px) {\n     width: 200px;\n   }\n`;\n\nconst Button = styled.a`\n  height: 40px;\n  width: 200px;\n  box-sizing: border-box;\n  border: 2px solid white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-decoration: none;\n  color: white;\n  font-size: 14px;;\n`;\n","import { useEffect, useRef } from \"react\";\n\ntype Delay = number | null;\ntype TimerHandler = (...args: any[]) => void;\n\nconst useInterval = (callback: TimerHandler, delay: Delay) => {\n  const savedCallbackRef = useRef<TimerHandler>();\n\n  useEffect(() => {\n    savedCallbackRef.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    const handler = (...args: any[]) => savedCallbackRef.current!(...args);\n\n    if (delay !== null) {\n      const intervalId = setInterval(handler, delay);\n      return () => clearInterval(intervalId);\n    }\n  }, [delay]);\n};\n\nexport default useInterval;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport ImageMedia from \"./ImageMedia\";\nimport Cta from \"./Cta\";\nimport useInterval from \"./useInterval\";\nimport { ResponseType } from \"../types\";\n\ninterface Props {\n  imageData: ResponseType[];\n}\n\nconst TRANSITION_TIMEOUT = 500;\n\nconst DesktopCarousel: React.FC<Props> = ({ imageData }: Props) => {\n  // preload our images to avoid flickers\n  useEffect(() => {\n    imageData.forEach(({ media: { desktop, mobile } }) => {\n      new Image().src = desktop;\n      new Image().src = mobile;\n    });\n  }, [imageData]);\n\n  const [carouselIndexes, setCarouselIndexes] = useState([\n    imageData.length - 1,\n    0,\n    1,\n  ]);\n  const [offset, setOffset] = useState(-100);\n  const [transition, setTransition] = useState(true);\n  const [direction, setDirection] = useState(\"\");\n  const [isScrolling, setIsScrolling] = useState(true);\n\n  useInterval(\n    () => {\n      handleCarouselMove(\"right\");\n    },\n    isScrolling ? null : null\n  );\n\n  useEffect(() => {\n    if (transition === true) {\n      return;\n    }\n\n    let [left, middle, right] = carouselIndexes;\n\n    if (direction === \"left\") {\n      right = middle;\n      middle = left;\n      left = left === 0 ? imageData.length - 1 : (left -= 1);\n    } else {\n      left = middle;\n      middle = right;\n      right = right === imageData.length - 1 ? 0 : (right += 1);\n    }\n\n    setCarouselIndexes([left, middle, right]);\n    setOffset(-100);\n\n    setTimeout(() => {\n      setTransition(true);\n    }, 20);\n\n    // dont care if the indexes change inside this hook since we're the ones chaging them\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [transition]);\n\n  const handleCarouselMove = (direction: string) => {\n    setDirection(direction);\n    if (direction === \"left\") {\n      setOffset(offset + 100);\n    } else {\n      setOffset(offset - 100);\n    }\n\n    setTimeout(() => {\n      setTransition(false);\n    }, TRANSITION_TIMEOUT);\n  };\n\n  const clearScrollInterval = () => {\n    setIsScrolling(false);\n  };\n\n  const setScrollInterval = () => {\n    setIsScrolling(true);\n  };\n\n  return (\n    <React.Fragment>\n      <CarouselImageWrapper offset={offset.toString()} transition={transition}>\n        {carouselIndexes.map((index: number) => {\n          const {\n            media,\n            cta,\n            ctaPosition,\n            title,\n            heading,\n            subhead,\n          }: ResponseType = imageData[index];\n\n          return (\n            <ContentSection key={index}>\n              <ImageMedia media={media} />\n              <Cta\n                title={title}\n                heading={heading}\n                subHead={subhead}\n                textData={cta}\n                position={ctaPosition}\n              />\n            </ContentSection>\n          );\n        })}\n      </CarouselImageWrapper>\n\n      <main>\n        <Chevron\n          onMouseEnter={clearScrollInterval}\n          onMouseLeave={setScrollInterval}\n          onClick={() => {\n            handleCarouselMove(\"left\");\n          }}\n          rotation=\"-135deg\"\n          left=\"3em\"\n        />\n        <Chevron\n          onMouseEnter={clearScrollInterval}\n          onMouseLeave={setScrollInterval}\n          onClick={() => {\n            handleCarouselMove(\"right\");\n          }}\n          rotation=\"45deg\"\n          right=\"3em\"\n        />\n      </main>\n    </React.Fragment>\n  );\n};\n\nexport default DesktopCarousel;\n\nconst CarouselImageWrapper = styled.main<{\n  offset: string;\n  transition: boolean;\n}>`\n  left: ${(props) => props.offset}vw;\n  position: absolute;\n  display: flex;\n  flex-direction: row;\n  align-items: stretch;\n\n  ${(props) =>\n    props.transition ? `transition: all ${TRANSITION_TIMEOUT}ms ease-out` : \"\"};\n`;\n\nconst Chevron = styled.span<{\n  rotation: string;\n  top?: string;\n  left?: string;\n  right?: string;\n}>`\n  position: absolute;\n  top: calc(50% - 1em);\n  cursor: pointer;\n  ${(props) => (props.left ? `left: ${props.left};` : \"\")}\n  ${(props) => (props.right ? `right: ${props.right};` : \"\")}\n\n  &::before {\n    border-style: solid;\n    border-color: white;\n    border-width: 1px 0.1px 0 0;\n    content: \"\";\n    display: inline-block;\n    height: 2em;\n    left: 1em;\n    position: relative;\n    top: 1em;\n    transform: rotate(-45deg);\n    vertical-align: top;\n    width: 2em;\n    transform: rotate(${(props) => props.rotation});\n  }\n`;\n\nconst ContentSection = styled.section`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport DesktopCarousel from \"./Carousel/DesktopCarousel\";\nimport { ResponseType } from \"./types\";\n\nconst App: React.FC = () => {\n  const [useCars, setUseCars] = useState(\n    new URLSearchParams(window.location.search).get(\"cars\") !== null\n  );\n  const [error, setError] = useState(\"\");\n  const [serviceResponse, setServiceResponse] = useState<ResponseType[]>([]);\n\n  useEffect(() => {\n    const makeRequest = async () => {\n      const resUrl = useCars\n        ? \"https://frontend-assessment-service.vcomm.io/cars\"\n        : \"https://frontend-assessment-service.vcomm.io/\";\n      let res;\n      try {\n        res = await axios.get(resUrl);\n      } catch {\n        setError(res?.statusText || \"error fetching images\");\n        return;\n      }\n\n      setServiceResponse([...res.data.data]);\n    };\n\n    makeRequest();\n  }, [useCars]);\n\n  return (\n    <Main>\n      {serviceResponse.length ? (\n        <DesktopCarousel imageData={serviceResponse} />\n      ) : (\n        <h1>...loading</h1>\n      )}\n    </Main>\n  );\n};\n\nconst Main = styled.main`\n  width: 100vw;\n  height: 100vh;\n  margin: 0;\n  top: 0;\n  left: 0;\n  position: fixed;\n`;\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}